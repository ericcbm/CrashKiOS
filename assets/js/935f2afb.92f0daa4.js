"use strict";(self.webpackChunktouchlab=self.webpackChunktouchlab||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"CrashKiOS Home","href":"/intro","docId":"intro"},{"type":"link","label":"Setting Up CrashKiOS with Bugsnag","href":"/BugsnagTutorial","docId":"BugsnagTutorial"},{"type":"link","label":"Setting Up CrashKiOS with Crashlytics","href":"/CrashlyticsTutorial","docId":"CrashlyticsTutorial"},{"type":"link","label":"THE_PROBLEM","href":"/THE_PROBLEM","docId":"THE_PROBLEM"}]},"docs":{"BugsnagTutorial":{"id":"BugsnagTutorial","title":"Setting Up CrashKiOS with Bugsnag","description":"If you use Bugsnag and an uncaught exception gets thrown from shared Kotlin code running on iOS, the crash report generated","sidebar":"tutorialSidebar"},"CrashlyticsTutorial":{"id":"CrashlyticsTutorial","title":"Setting Up CrashKiOS with Crashlytics","description":"If you use Crashlytics and an uncaught exception gets thrown from shared Kotlin code running on iOS, the crash report generated","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"CrashKiOS Home","description":"Thin library that provides symbolicated crash reports for Kotlin code on iOS. Supports sending crashes, and handled exceptions, as well as logging breadcrumbs and custom key/value pairs. Currently supported crash reporting services are Firebase Crashlytics and Bugsnag.","sidebar":"tutorialSidebar"},"THE_PROBLEM":{"id":"THE_PROBLEM","title":"THE_PROBLEM","description":"The Problem","sidebar":"tutorialSidebar"}}}')}}]);